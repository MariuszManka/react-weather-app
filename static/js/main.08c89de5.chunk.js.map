{"version":3,"sources":["components/Header.js","components/Info.js","components/Image.js","components/Temperature.js","components/Hamburger.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","props","_props$info","info","city","date","react_default","a","createElement","className","concat","class","Info","sunrise","sunset","wind","pressure","sunriseTime","Date","toLocaleTimeString","dayBulid","Fragment","index_es","icon","faSun","size","faWind","faThermometerQuarter","nightBulid","faMoon","Image","faCloud","Temperature","weatherStatus","Hamburger","state","isMenuActive","handleMenuClick","_this","setState","prevState","this","_this$props","text","change","cityChange","err","classN","onClick","onSubmit","type","required","value","onChange","warning","Component","API_key","App","temp","weather","error","handleCityChange","e","preventDefault","API","fetch","then","response","ok","Error","statusText","json","data","time","toLocaleDateString","main","toFixed","speed","sys","description","catch","handleInputChange","target","_this2","console","log","actualTime","getTime","_this$state","components_Hamburger","components_Header","components_Image","components_Temperature","components_Info","click","handleMenuActive","isActive","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.08c89de5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./css/Header.css\";\r\n\r\nconst Header = props => {\r\n  const { city, date } = props.info;\r\n\r\n  return (\r\n    <header className={`header ${props.class}`}>\r\n      <h1> {city} </h1> <h4> {date} </h4>{\" \"}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./css/Info.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faWind,\r\n  faSun,\r\n  faThermometerQuarter,\r\n  faMoon\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Info = props => {\r\n  const { sunrise, sunset, wind, pressure } = props.info;\r\n\r\n  const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString();\r\n  const sunsetTime = new Date(sunset * 1000).toLocaleTimeString();\r\n\r\n  const dayBulid = (\r\n    <>\r\n      <div className=\"line\" />\r\n      <div className={`sunrise ${props.class}`}>\r\n        <FontAwesomeIcon icon={faSun} size=\"2x\" className=\"sunriseIco\" />\r\n        <h4> sunrise </h4> <h2> {sunriseTime} </h2>{\" \"}\r\n      </div>{\" \"}\r\n      <div className=\"wind\">\r\n        <FontAwesomeIcon icon={faWind} size=\"2x\" className=\"windIco\" />\r\n        <h4> wind </h4>{\" \"}\r\n        <h2>\r\n          {\" \"}\r\n          {`${wind} m/s\r\n        `}{\" \"}\r\n        </h2>{\" \"}\r\n      </div>{\" \"}\r\n      <div className=\"pressure\">\r\n        {\" \"}\r\n        <FontAwesomeIcon\r\n          icon={faThermometerQuarter}\r\n          size=\"2x\"\r\n          className=\"pressureIco\"\r\n        />{\" \"}\r\n        <h4> pressure </h4> <h2>{`${pressure} hPa `}</h2>{\" \"}\r\n      </div>{\" \"}\r\n    </>\r\n  );\r\n\r\n  const nightBulid = (\r\n    <>\r\n      <div className=\"line\" />\r\n      <div className=\"sunrise\">\r\n        <FontAwesomeIcon icon={faSun} size=\"2x\" className=\"sunriseIco\" />\r\n        <h4> sunrise </h4> <h2> {sunriseTime} </h2>{\" \"}\r\n      </div>{\" \"}\r\n      <div\r\n        className={`\r\n        wind $ {\r\n          props.class\r\n        }\r\n        `}\r\n      >\r\n        <FontAwesomeIcon icon={faWind} size=\"2x\" className=\"windIco\" />\r\n        <h4> wind </h4>{\" \"}\r\n        <h2>\r\n          {\" \"}\r\n          {`\r\n        $ {\r\n          wind\r\n        }\r\n        m / s `}{\" \"}\r\n        </h2>{\" \"}\r\n      </div>{\" \"}\r\n      <div\r\n        className={`\r\n        sunsetInfo $ {\r\n          props.class\r\n        }\r\n        `}\r\n      >\r\n        {\" \"}\r\n        <FontAwesomeIcon icon={faMoon} size=\"2x\" className=\"moonIco\" />{\" \"}\r\n        <h4> sunset </h4>{\" \"}\r\n        <h2>\r\n          {\" \"}\r\n          {`\r\n        $ {\r\n          sunsetTime\r\n        }\r\n        `}{\" \"}\r\n        </h2>{\" \"}\r\n      </div>{\" \"}\r\n    </>\r\n  );\r\n\r\n  if (props.class === \"day\") {\r\n    return <> {dayBulid} </>;\r\n  } else {\r\n    return <> {nightBulid} </>;\r\n  }\r\n};\r\n\r\nexport default Info;\r\n","import React from \"react\";\r\nimport \"./css/Image.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCloud, faMoon } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Image = props => {\r\n  const dayBulid = (\r\n    <div className={`image ${props.class} `}>\r\n      <div className=\"firstCloud\">\r\n        <FontAwesomeIcon icon={faCloud} className=\"cloud\" size=\"5x\" />\r\n      </div>{\" \"}\r\n      <div className=\"secondCloud\">\r\n        <FontAwesomeIcon icon={faCloud} className=\"cloud\" size=\"4x\" />\r\n      </div>{\" \"}\r\n      <div className=\"sun\" />\r\n    </div>\r\n  );\r\n\r\n  const nightBulid = (\r\n    <div className={`image ${props.class} `}>\r\n      <div className=\"firstCloud\">\r\n        <FontAwesomeIcon icon={faCloud} className=\"cloud\" size=\"5x\" />\r\n      </div>{\" \"}\r\n      <div className=\"moon\">\r\n        <FontAwesomeIcon icon={faMoon} className=\"moon\" size=\"6x\" />\r\n      </div>{\" \"}\r\n      <div className=\"secondCloud\">\r\n        <FontAwesomeIcon icon={faCloud} className=\"cloud\" size=\"4x\" />\r\n      </div>{\" \"}\r\n      <div className=\"sun\" />\r\n    </div>\r\n  );\r\n\r\n  if (props.class === \"day\") {\r\n    return <> {dayBulid} </>;\r\n  } else {\r\n    return <> {nightBulid} </>;\r\n  }\r\n};\r\n\r\nexport default Image;\r\n","import React from \"react\";\r\nimport \"./css/Temperature.css\";\r\n\r\nconst Temperature = props => {\r\n  return (\r\n    <div className={`temp ${props.class}`}>\r\n      <h1> {props.info} &#176;C</h1>\r\n\r\n      <h2>\r\n        There is a <span>{props.weatherStatus}</span>\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Temperature;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./css/Hamburger.css\";\r\n\r\nclass Hamburger extends Component {\r\n  state = {\r\n    isMenuActive: false\r\n  };\r\n\r\n  handleMenuClick = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        isMenuActive: !prevState.isMenuActive\r\n      };\r\n    });\r\n  }; //metoda która zmienia stan menu z klikniętego na nie kliknięte\r\n\r\n  render() {\r\n    const { isMenuActive } = this.state;\r\n    const { text, change, cityChange, err, classN } = this.props;\r\n    return (\r\n      <>\r\n        <nav className={`navigation ${classN}`}>\r\n          <div\r\n            className={isMenuActive ? \"burger active\" : \"burger\"}\r\n            onClick={this.handleMenuClick}\r\n          >\r\n            <div className=\"menuBackground\" />\r\n            <span> </span>{\" \"}\r\n          </div>{\" \"}\r\n          <div>\r\n            <form\r\n              onSubmit={cityChange}\r\n              className={isMenuActive ? \"menu active\" : \"menu\"}\r\n            >\r\n              <div className=\"group\">\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  className=\"addCity\"\r\n                  value={text}\r\n                  onChange={change}\r\n                />{\" \"}\r\n                <span className=\"highlight\" />\r\n                <span className=\"bar\" />\r\n                <label> Find City </label>{\" \"}\r\n              </div>{\" \"}\r\n              <div className=\"wrapp\">\r\n                <button\r\n                  className={this.props.err ? `applay shake` : `applay`}\r\n                  onClick={this.handleMenuClick}\r\n                >\r\n                  {\" \"}\r\n                  Find!{\" \"}\r\n                </button>{\" \"}\r\n              </div>{\" \"}\r\n            </form>{\" \"}\r\n            {err ? this.props.warning : null}{\" \"}\r\n          </div>{\" \"}\r\n        </nav>{\" \"}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Hamburger;\r\n","import React, { Component } from \"react\";\nimport \"./css/App.css\";\nimport Header from \"./Header\";\nimport Info from \"./Info\";\nimport Image from \"./Image\";\nimport Temperature from \"./Temperature\";\nimport Hamburger from \"./Hamburger\";\n\nconst API_key = \"288f6eab4f8a85fc1c207e194d70f482\";\n\nclass App extends Component {\n  state = {\n    date: \"\",\n    city: \"Warszawa\",\n    temp: \"\",\n    sunrise: \"\",\n    sunset: \"\",\n    wind: \"\",\n    pressure: \"\",\n    weather: \"\",\n    error: false,\n    value: \"\"\n  };\n\n  //__________________INICJALIZOWANIE DANYCH (POCZĄTKOWE MIASTO - LUBLINIEC_______________________//\n\n  componentDidMount() {\n    const API = `http://api.openweathermap.org/data/2.5/weather?q=${\n      this.state.city\n    }&APPID=${API_key}&units=metric`;\n\n    fetch(API)\n      .then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(response.statusText);\n      })\n      .then(response => response.json())\n      .then(data => {\n        const time = new Date().toLocaleDateString();\n\n        // const city = this.state.firstLoad ? \"Lubliniec\" : this.state.value;\n        this.setState({\n          date: time,\n          temp: data.main.temp.toFixed(),\n          wind: data.wind.speed.toFixed(),\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          pressure: data.main.pressure.toFixed(),\n          weather: data.weather[0].description,\n          value: \"\"\n        });\n      })\n      .catch(error => {\n        console.log(error);\n        this.setState(prevState => ({\n          error: true,\n          city: \"Lubliniec\",\n          value: \"\"\n        }));\n      });\n  }\n\n  //____________________PONOWNE WYSZUKIWANIE MIASTA TYM RAZEM PO VALUE______________________________//\n\n  handleCityChange = e => {\n    e.preventDefault();\n\n    const API = `https://api.openweathermap.org/data/2.5/weather?q=${\n      this.state.value\n    }&APPID=${API_key}&units=metric`;\n\n    fetch(API)\n      .then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(response.statusText);\n      })\n      .then(response => response.json())\n      .then(data => {\n        const time = new Date().toLocaleDateString();\n        this.setState(prevState => {\n          return {\n            city: prevState.value,\n            date: time,\n            temp: data.main.temp.toFixed(),\n            wind: data.wind.speed.toFixed(),\n            sunrise: data.sys.sunrise,\n            sunset: data.sys.sunset,\n            pressure: data.main.pressure.toFixed(),\n            weather: data.weather[0].description,\n            isMenuActive: !prevState.isMenuActive,\n            value: \"\"\n          };\n        });\n      })\n      .catch(error => {\n        this.setState(prevState => ({\n          error: true,\n          value: \"\"\n        }));\n      });\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      value: e.target.value\n    });\n  };\n\n  render() {\n    const actualTime = new Date().getTime() / 1000; //Pobieranie aktualnej daty jako liczby minisekund\n\n    const { temp, isMenuActive, value, sunset, weather, error } = this.state; //Destrukturyzacja\n\n    const dayBulid = (\n      <div className=\"App day\">\n        <Hamburger\n          text={value}\n          change={this.handleInputChange}\n          cityChange={this.handleCityChange}\n          classN={\"day\"}\n          err={error}\n        />{\" \"}\n        <Header info={this.state} class={\"day\"} /> <Image class={\"day\"} />{\" \"}\n        <Temperature info={temp} weatherStatus={weather} class={\"day\"} />{\" \"}\n        <Info info={this.state} class={\"day\"} />{\" \"}\n      </div>\n    );\n\n    const nightBulid = (\n      <div className=\"App night\">\n        <Hamburger\n          click={this.handleMenuActive}\n          isActive={isMenuActive}\n          text={value}\n          change={this.handleInputChange}\n          cityChange={this.handleCityChange}\n          classN={\"night\"}\n          err={error}\n        />{\" \"}\n        <Header info={this.state} class={\"night\"} /> <Image class={\"night\"} />{\" \"}\n        <Temperature info={temp} weatherStatus={weather} class={\"night\"} />{\" \"}\n        <Info info={this.state} class={\"night\"} />{\" \"}\n      </div>\n    );\n    if (actualTime <= sunset) {\n      return <> {dayBulid} </>;\n    } else {\n      return <> {nightBulid} </>;\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}