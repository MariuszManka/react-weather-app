{"version":3,"sources":["components/Header.js","components/Info.js","components/Image.js","components/Temperature.js","components/Hamburger.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","props","_props$info","info","city","date","react_default","a","createElement","className","concat","class","Info","sunrise","sunset","wind","pressure","sunriseTime","Date","toLocaleTimeString","sunsetTime","dayBulid","Fragment","index_es","icon","faSun","size","faWind","faThermometerQuarter","nightBulid","faMoon","Image","faCloud","Temperature","weatherStatus","Hamburger","isActive","click","text","change","cityChange","err","warning","burger","faBars","onClick","menu","faTimes","onSubmit","type","placeholder","value","onChange","API_key","App","state","temp","weather","error","isMenuActive","handleCityChange","e","preventDefault","console","log","target","API","_this","fetch","then","response","ok","Error","statusText","json","data","time","toLocaleDateString","setState","prevState","main","speed","toFixed","sys","description","catch","handleMenuActive","handleInputChange","_this2","this","actualTime","getTime","_this$state","components_Hamburger","components_Header","components_Image","components_Temperature","components_Info","Component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b160945d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./css/Header.css\";\r\n\r\nconst Header = props => {\r\n  const { city, date } = props.info;\r\n\r\n  return (\r\n    <header className={`header ${props.class}`}>\r\n      <h1> {city} </h1> <h4> {date} </h4>{\" \"}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./css/Info.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faWind,\r\n  faSun,\r\n  faThermometerQuarter,\r\n  faMoon\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Info = props => {\r\n  const { sunrise, sunset, wind, pressure } = props.info;\r\n\r\n  const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString();\r\n  const sunsetTime = new Date(sunset * 1000).toLocaleTimeString();\r\n\r\n  const dayBulid = (\r\n    <>\r\n      <div className=\"line\" />\r\n      <div className=\"sunrise\">\r\n        <FontAwesomeIcon icon={faSun} size=\"2x\" className=\"sunriseIco\" />\r\n        <h4> sunrise </h4> <h2> {sunriseTime} </h2>{\" \"}\r\n      </div>{\" \"}\r\n      <div className=\"wind\">\r\n        <FontAwesomeIcon icon={faWind} size=\"2x\" className=\"windIco\" />\r\n        <h4> wind </h4> <h2> {`${wind} m/s`} </h2>{\" \"}\r\n      </div>{\" \"}\r\n      <div className=\"pressure\">\r\n        {\" \"}\r\n        <FontAwesomeIcon\r\n          icon={faThermometerQuarter}\r\n          size=\"2x\"\r\n          className=\"pressureIco\"\r\n        />{\" \"}\r\n        <h4> pressure </h4> <h2> {`${pressure} hPa`} </h2>{\" \"}\r\n      </div>{\" \"}\r\n    </>\r\n  );\r\n\r\n  const nightBulid = (\r\n    <>\r\n      <div className=\"line\" />\r\n      <div className={`sunrise ${props.class}`}>\r\n        <FontAwesomeIcon icon={faSun} size=\"2x\" className=\"sunriseIco\" />\r\n        <h4> sunrise </h4> <h2> {sunriseTime} </h2>{\" \"}\r\n      </div>{\" \"}\r\n      <div className={`wind ${props.class}`}>\r\n        <FontAwesomeIcon icon={faWind} size=\"2x\" className=\"windIco\" />\r\n        <h4> wind </h4> <h2> {`${wind} m/s`} </h2>{\" \"}\r\n      </div>{\" \"}\r\n      <div className={`sunsetInfo ${props.class}`}>\r\n        {\" \"}\r\n        <FontAwesomeIcon icon={faMoon} size=\"2x\" className=\"moonIco\" />{\" \"}\r\n        <h4> sunset </h4> <h2> {`${sunsetTime}`} </h2>{\" \"}\r\n      </div>{\" \"}\r\n    </>\r\n  );\r\n\r\n  if (props.class === \"day\") {\r\n    return <> {dayBulid} </>;\r\n  } else {\r\n    return <> {nightBulid} </>;\r\n  }\r\n};\r\n\r\nexport default Info;\r\n","import React from \"react\";\r\nimport \"./css/Image.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCloud, faMoon } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Image = props => {\r\n  const dayBulid = (\r\n    <div className={`image ${props.class} `}>\r\n      <div className=\"firstCloud\">\r\n        <FontAwesomeIcon icon={faCloud} className=\"cloud\" size=\"5x\" />\r\n      </div>{\" \"}\r\n      <div className=\"secondCloud\">\r\n        <FontAwesomeIcon icon={faCloud} className=\"cloud\" size=\"4x\" />\r\n      </div>{\" \"}\r\n      <div className=\"sun\" />\r\n    </div>\r\n  );\r\n\r\n  const nightBulid = (\r\n    <div className={`image ${props.class} `}>\r\n      <div className=\"firstCloud\">\r\n        <FontAwesomeIcon icon={faCloud} className=\"cloud\" size=\"5x\" />\r\n      </div>{\" \"}\r\n      <div className=\"moon\">\r\n        <FontAwesomeIcon icon={faMoon} className=\"moon\" size=\"6x\" />\r\n      </div>{\" \"}\r\n      <div className=\"secondCloud\">\r\n        <FontAwesomeIcon icon={faCloud} className=\"cloud\" size=\"4x\" />\r\n      </div>{\" \"}\r\n      <div className=\"sun\" />\r\n    </div>\r\n  );\r\n\r\n  if (props.class === \"day\") {\r\n    return <> {dayBulid} </>;\r\n  } else {\r\n    return <> {nightBulid} </>;\r\n  }\r\n};\r\n\r\nexport default Image;\r\n","import React from \"react\";\r\nimport \"./css/Temperature.css\";\r\n\r\nconst Temperature = props => {\r\n  return (\r\n    <div className={`temp ${props.class}`}>\r\n      <h1> {props.info} &#176;C</h1>\r\n\r\n      <h2>\r\n        There is a <span>{props.weatherStatus}</span>\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Temperature;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./css/Hamburger.css\";\r\n\r\nconst Hamburger = props => {\r\n  const { isActive, click, text, change, cityChange, err } = props;\r\n  const warning = (\r\n    <div className=\"warning\">\r\n      <h1> {`Upss, nie znaleźliśmy takiego miasta, podaj inne`} </h1>{\" \"}\r\n    </div>\r\n  );\r\n  const burger = (\r\n    <nav className={`burger ${props.class}`}>\r\n      <FontAwesomeIcon icon={faBars} size=\"2x\" onClick={click} />{\" \"}\r\n    </nav>\r\n  );\r\n\r\n  const menu = (\r\n    <nav className={\"menu\"}>\r\n      <FontAwesomeIcon\r\n        icon={faTimes}\r\n        size=\"3x\"\r\n        onClick={click}\r\n        className=\"cancel\"\r\n      />\r\n      <form onSubmit={cityChange}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"addCity\"\r\n          placeholder=\"Find your City!\"\r\n          value={text}\r\n          onChange={change}\r\n        />{\" \"}\r\n        <div className=\"wrapp\">\r\n          <button className={err ? `applay shake` : `applay`}> Find! </button>{\" \"}\r\n        </div>{\" \"}\r\n      </form>{\" \"}\r\n      {err ? warning : null}{\" \"}\r\n    </nav>\r\n  );\r\n\r\n  return <> {isActive ? menu : burger} </>;\r\n};\r\n\r\nexport default Hamburger;\r\n","import React, {\n  Component\n} from \"react\";\nimport \"./css/App.css\";\nimport Header from \"./Header\";\nimport Info from \"./Info\";\nimport Image from \"./Image\";\nimport Temperature from \"./Temperature\";\nimport Hamburger from \"./Hamburger\";\n\nconst API_key = \"6a3b29b7bab116e64a96371b7dfa2e20\";\n\nclass App extends Component {\n  state = {\n    date: \"\",\n    city: \"Lubliniec\",\n    temp: \"\",\n    sunrise: \"\",\n    sunset: \"\",\n    wind: \"\",\n    pressure: \"\",\n    weather: \"\",\n    error: false,\n    isMenuActive: false,\n    value: \"\"\n  };\n\n  //__________________INICJALIZOWANIE DANYCH (POCZĄTKOWE MIASTO - LUBLINIEC_______________________//\n\n  componentDidMount() {\n    const API = `http://api.openweathermap.org/data/2.5/weather?q=${\n      this.state.city\n    }&APPID=${API_key}&units=metric`;\n\n    fetch(API)\n      .then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(response.statusText);\n      })\n      .then(response => response.json())\n      .then(data => {\n        const time = new Date().toLocaleDateString();\n\n        // const city = this.state.firstLoad ? \"Lubliniec\" : this.state.value;\n        this.setState({\n          date: time,\n          temp: data.main.temp,\n          wind: data.wind.speed.toFixed(),\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          pressure: data.main.pressure.toFixed(),\n          weather: data.weather[0].description,\n          value: \"\"\n        });\n      })\n      .catch(error => {\n        console.log(error);\n        this.setState(prevState => ({\n          error: true,\n          city: \"Lubliniec\",\n          value: \"\"\n        }));\n      });\n  }\n\n  //____________________PONOWNE WYSZUKIWANIE MIASTA TYM RAZEM PO VALUE______________________________//\n\n  handleCityChange = e => {\n    e.preventDefault();\n\n    console.log(e.target);\n\n    const API = `http://api.openweathermap.org/data/2.5/weather?q=${\n      this.state.value\n    }&APPID=${API_key}&units=metric`;\n\n    fetch(API)\n      .then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(response.statusText);\n      })\n      .then(response => response.json())\n      .then(data => {\n        const time = new Date().toLocaleDateString();\n        this.setState(prevState => {\n          return {\n            city: prevState.value,\n            date: time,\n            temp: data.main.temp,\n            wind: data.wind.speed.toFixed(),\n            sunrise: data.sys.sunrise,\n            sunset: data.sys.sunset,\n            pressure: data.main.pressure.toFixed(),\n            weather: data.weather[0].description,\n            isMenuActive: !prevState.isMenuActive,\n            value: \"\"\n          };\n        });\n      })\n      .catch(error => {\n        this.setState(prevState => ({\n          error: true,\n          value: \"\"\n        }));\n      });\n  };\n\n  handleMenuActive = () => {\n    this.setState(prevState => {\n      return {\n        isMenuActive: !prevState.isMenuActive,\n        error: false\n      };\n    });\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      value: e.target.value\n    });\n  };\n\n  render() {\n    const actualTime = new Date().getTime(); //Pobieranie aktualnej daty jako liczby minisekund\n\n    const {\n      temp,\n      isMenuActive,\n      value,\n      sunset,\n      weather,\n      error\n    } = this.state; //Destrukturyzacja\n\n    const dayBulid = ( <\n      div className = \"App day\" >\n      <\n      Hamburger click = {\n        this.handleMenuActive\n      }\n      isActive = {\n        isMenuActive\n      }\n      text = {\n        value\n      }\n      change = {\n        this.handleInputChange\n      }\n      cityChange = {\n        this.handleCityChange\n      }\n      class = {\n        \"day\"\n      }\n      err = {\n        error\n      }\n      />{\" \"} <\n      Header info = {\n        this.state\n      }\n      class = {\n        \"day\"\n      }\n      /> <Image class={\"day\"} / > {\n        \" \"\n      } <\n      Temperature info = {\n        temp\n      }\n      weatherStatus = {\n        weather\n      }\n      class = {\n        \"day\"\n      }\n      />{\" \"} <\n      Info info = {\n        this.state\n      }\n      class = {\n        \"day\"\n      }\n      />{\" \"} < /\n      div >\n    );\n\n    const nightBulid = ( <\n      div className = \"App night\" >\n      <\n      Hamburger click = {\n        this.handleMenuActive\n      }\n      isActive = {\n        isMenuActive\n      }\n      text = {\n        value\n      }\n      change = {\n        this.handleInputChange\n      }\n      cityChange = {\n        this.handleCityChange\n      }\n      class = {\n        \"night\"\n      }\n      err = {\n        error\n      }\n      />{\" \"} <\n      Header info = {\n        this.state\n      }\n      class = {\n        \"night\"\n      }\n      /> <Image class={\"night\"} / > {\n        \" \"\n      } <\n      Temperature info = {\n        temp\n      }\n      weatherStatus = {\n        weather\n      }\n      class = {\n        \"night\"\n      }\n      />{\" \"} <\n      Info info = {\n        this.state\n      }\n      class = {\n        \"night\"\n      }\n      />{\" \"} < /\n      div >\n    );\n    if (actualTime <= sunset) {\n      return < > {\n        dayBulid\n      } < />;\n    } else {\n      return < > {\n        nightBulid\n      } < />;\n    }\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}